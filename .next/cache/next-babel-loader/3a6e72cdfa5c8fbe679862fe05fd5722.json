{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n/*!\n\n =========================================================\n * NextJS Material Kit - v1.1.0 based on Material Kit - v2.0.2 and Material Kit React - v1.8.0\n =========================================================\n\n * Product Page: https://www.creative-tim.com/product/nextjs-material-kit\n * Copyright 2020 Creative Tim (https://www.creative-tim.com)\n * Licensed under MIT (https://github.com/creativetimofficial/nextjs-material-kit/blob/master/LICENSE.md)\n\n =========================================================\n\n * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n */\n// ##############################\n// // // Variables - Styles that are used on more than one component\n// #############################\nconst hexColorToRGB = function (hexColor) {\n  let detectShorthand = /^#?([a-f\\d])([a-f\\d])([a-f\\d])$/i; // #000 vs #000000\n\n  hexColor = hexColor.replace(detectShorthand, function (m, r, g, b) {\n    return r + r + g + g + b + b;\n  });\n  const hex_array = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hexColor); // #000000 to #ffffff\n\n  return hex_array ? {\n    r: parseInt(hex_array[1], 16),\n    // 0-255\n    g: parseInt(hex_array[2], 16),\n    // 0-255\n    b: parseInt(hex_array[3], 16) // 0-255\n\n  } : null;\n};\n\nconst hexToRGBAlpha = function (hexColor, alpha) {\n  let rgb = hexColorToRGB(hexColor);\n  return `rgba(${rgb.r},${rgb.g},${rgb.b},${alpha})`;\n};\n\nconst drawerWidth = 260;\nconst transition = {\n  transition: \"all 0.33s cubic-bezier(0.685, 0.0473, 0.346, 1)\"\n};\nconst conatinerFluid = {\n  paddingRight: \"15px\",\n  paddingLeft: \"15px\",\n  marginRight: \"auto\",\n  marginLeft: \"auto\",\n  width: \"100%\"\n};\n\nconst container = _objectSpread({}, conatinerFluid, {\n  \"@media (min-width: 576px)\": {\n    maxWidth: \"540px\"\n  },\n  \"@media (min-width: 768px)\": {\n    maxWidth: \"720px\"\n  },\n  \"@media (min-width: 992px)\": {\n    maxWidth: \"960px\"\n  },\n  \"@media (min-width: 1200px)\": {\n    maxWidth: \"1140px\"\n  }\n});\n\nconst boxShadow = {\n  boxShadow: \"0 10px 30px -12px rgba(0, 0, 0, 0.42), 0 4px 25px 0px rgba(0, 0, 0, 0.12), 0 8px 10px -5px rgba(0, 0, 0, 0.2)\"\n};\nconst card = {\n  display: \"inline-block\",\n  position: \"relative\",\n  width: \"100%\",\n  margin: \"25px 0\",\n  boxShadow: \"0 1px 4px 0 rgba(0, 0, 0, 0.14)\",\n  borderRadius: \"3px\",\n  color: \"rgba(0, 0, 0, 0.87)\",\n  background: \"#fff\"\n};\nconst defaultFont = {\n  fontFamily: '\"Roboto\", \"Helvetica\", \"Arial\", sans-serif',\n  fontWeight: \"300\",\n  lineHeight: \"1.5em\"\n};\nconst primaryColor = \"#9c27b0\";\nconst warningColor = \"#ff9800\";\nconst dangerColor = \"#f44336\";\nconst successColor = \"#4caf50\";\nconst infoColor = \"#00acc1\";\nconst roseColor = \"#e91e63\";\nconst grayColor = \"#999999\";\nconst primaryBoxShadow = {\n  boxShadow: `0 12px 20px -10px ${hexToRGBAlpha(primaryColor, 0.28)}, 0 4px 20px 0px rgba(0, 0, 0, 0.12), 0 7px 8px -5px ${hexToRGBAlpha(primaryColor, 0.2)}`\n};\nconst infoBoxShadow = {\n  boxShadow: `0 12px 20px -10px ${hexToRGBAlpha(infoColor, 0.28)}, 0 4px 20px 0px rgba(0, 0, 0, 0.12), 0 7px 8px -5px ${hexToRGBAlpha(infoColor, 0.2)}`\n};\nconst successBoxShadow = {\n  boxShadow: `0 12px 20px -10px ${hexToRGBAlpha(successColor, 0.28)}, 0 4px 20px 0px rgba(0, 0, 0, 0.12), 0 7px 8px -5px ${hexToRGBAlpha(successColor, 0.2)}`\n};\nconst warningBoxShadow = {\n  boxShadow: `0 12px 20px -10px ${hexToRGBAlpha(warningColor, 0.28)}, 0 4px 20px 0px rgba(0, 0, 0, 0.12), 0 7px 8px -5px ${hexToRGBAlpha(warningColor, 0.2)}`\n};\nconst dangerBoxShadow = {\n  boxShadow: `0 12px 20px -10px ${hexToRGBAlpha(dangerColor, 0.28)}, 0 4px 20px 0px rgba(0, 0, 0, 0.12), 0 7px 8px -5px ${hexToRGBAlpha(dangerColor, 0.2)}`\n};\nconst roseBoxShadow = {\n  boxShadow: `0 4px 20px 0px ${hexToRGBAlpha(\"#000\", 0.14)}, 0 7px 10px -5px ${hexToRGBAlpha(roseColor, 0.4)}`\n};\n\nconst warningCardHeader = _objectSpread({\n  color: \"#fff\",\n  background: \"linear-gradient(60deg, #ffa726, #fb8c00)\"\n}, warningBoxShadow);\n\nconst successCardHeader = _objectSpread({\n  color: \"#fff\",\n  background: \"linear-gradient(60deg, #66bb6a, #43a047)\"\n}, successBoxShadow);\n\nconst dangerCardHeader = _objectSpread({\n  color: \"#fff\",\n  background: \"linear-gradient(60deg, #ef5350, #e53935)\"\n}, dangerBoxShadow);\n\nconst infoCardHeader = _objectSpread({\n  color: \"#fff\",\n  background: \"linear-gradient(60deg, #26c6da, #00acc1)\"\n}, infoBoxShadow);\n\nconst primaryCardHeader = _objectSpread({\n  color: \"#fff\",\n  background: \"linear-gradient(60deg, #ab47bc, #8e24aa)\"\n}, primaryBoxShadow);\n\nconst roseCardHeader = _objectSpread({\n  color: \"#fff\",\n  background: \"linear-gradient(60deg, #ec407a, #d81b60)\"\n}, roseBoxShadow);\n\nconst cardActions = _objectSpread({\n  margin: \"0 20px 10px\",\n  paddingTop: \"10px\",\n  borderTop: \"1px solid #eeeeee\",\n  height: \"auto\"\n}, defaultFont);\n\nconst cardHeader = {\n  margin: \"-30px 15px 0\",\n  borderRadius: \"3px\",\n  padding: \"15px\"\n};\nconst defaultBoxShadow = {\n  border: \"0\",\n  borderRadius: \"3px\",\n  boxShadow: \"0 10px 20px -12px rgba(0, 0, 0, 0.42), 0 3px 20px 0px rgba(0, 0, 0, 0.12), 0 8px 10px -5px rgba(0, 0, 0, 0.2)\",\n  padding: \"10px 0\",\n  transition: \"all 150ms ease 0s\"\n};\nconst title = {\n  color: \"#3C4858\",\n  margin: \"1.75rem 0 0.875rem\",\n  textDecoration: \"none\",\n  fontWeight: \"700\",\n  fontFamily: `\"Roboto Slab\", \"Times New Roman\", serif`\n};\n\nconst cardTitle = _objectSpread({}, title, {\n  marginTop: \".625rem\"\n});\n\nconst cardLink = {\n  \"& + $cardLink\": {\n    marginLeft: \"1.25rem\"\n  }\n};\nconst cardSubtitle = {\n  marginBottom: \"0\",\n  marginTop: \"-.375rem\"\n};\nexport { hexToRGBAlpha //variables\n, drawerWidth, transition, container, conatinerFluid, boxShadow, card, defaultFont, primaryColor, warningColor, dangerColor, successColor, infoColor, roseColor, grayColor, primaryBoxShadow, infoBoxShadow, successBoxShadow, warningBoxShadow, dangerBoxShadow, roseBoxShadow, warningCardHeader, successCardHeader, dangerCardHeader, infoCardHeader, primaryCardHeader, roseCardHeader, cardActions, cardHeader, defaultBoxShadow, title, cardTitle, cardLink, cardSubtitle };","map":null,"metadata":{},"sourceType":"module"}