{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\"; // nodejs library to set properties for components\n\n// @material-ui/core components\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nconst styles = {\n  grid: {\n    marginRight: \"-15px\",\n    marginLeft: \"-15px\",\n    width: \"auto\"\n  }\n};\nconst useStyles = makeStyles(styles);\nexport default function GridContainer(props) {\n  const classes = useStyles();\n\n  const {\n    children,\n    className\n  } = props,\n        rest = _objectWithoutProperties(props, [\"children\", \"className\"]);\n\n  return __jsx(Grid, _extends({\n    container: true\n  }, rest, {\n    className: classes.grid + \" \" + className\n  }), children);\n}\nGridContainer.defaultProps = {\n  className: \"\"\n};","map":null,"metadata":{},"sourceType":"module"}